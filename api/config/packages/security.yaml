security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    encoders:
        App\Entity\Utilisateur:
            algorithm: auto
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Utilisateur
                property: email
        api_token_provider:
            entity:
                class: App\Entity\ApiToken
                property: token
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            pattern: ^/api
            provider: api_token_provider
            custom_authenticator: Aroban\Bundle\UtilisateurBundle\Security\ApiTokenAuthenticator
        main:
            lazy: true
            provider: app_user_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
            
            json_login:
                check_path: aroban_login
                username_path: email
                password_path: password
                
            logout:
                path: aroban_logout

#            custom_authenticators:
#                - Aroban\Bundle\UtilisateurBundle\Security\ApiTokenAuthenticator

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # allow unauthenticated users to access the home page and the login form
         - { path: ^/, roles: PUBLIC_ACCESS }
         - { path: ^/login, roles: PUBLIC_ACCESS }

        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
